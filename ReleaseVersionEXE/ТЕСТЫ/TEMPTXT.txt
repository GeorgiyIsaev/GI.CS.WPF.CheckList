ВОПРОС: Отметьте верные утверждения: 
ВЕРНО: Абстрактная фабрика основана на композиции, ее задача - создание семейств взаимосвязанных объектов. 
ВЕРНО: Фабричный метод основан на наследовании, его задача - перемещение создания экземпляров в субклассы. 
НЕ ВЕРНО: Фабричный метод основан на композиции, его задача - создание семейств взаимосвязанных объектов. 
НЕ ВЕРНО: Абстрактная фабрика основана на наследовании, ее задача - перемещение создания экземпляров в субклассы.
КОММЕНТАРИЙ: 
ВОПРОС: Отметьте верные утверждения 
ВЕРНО: Абстрактная фабрика основана на композиции, ее задача - создание семейств взаимосвязанных объектов. 1681 / 2537
ВЕРНО: Фабричный метод основан на наследовании, его задача - перемещение создания экземпляров в субклассы. 1671 / 2537
НЕ ВЕРНО: Фабричный метод основан на композиции, его задача - создание семейств взаимосвязанных объектов. 632 / 2537
НЕ ВЕРНО: Абстрактная фабрика основана на наследовании, ее задача - перемещение создания экземпляров в субклассы. 718 / 2537
КОММЕНТАРИЙ: 
ВОПРОС: Какие основные задачи решает применение паттернов проектирования? 
ВЕРНО: Показываются отношения и взаимодействия между классами или объектами. 4459 / 6745
ВЕРНО: Описывается решение целого класса абстрактных проблем. 5389 / 6745
ВЕРНО: Производится унификация терминологии, названий модулей и элементов проекта. 4166 / 6745
ВЕРНО: Облегчается дискуссия об абстрактных структурах данных между разработчиками. 4401 / 6745
КОММЕНТАРИЙ: 
ВОПРОС: Какие группы паттернов существуют по версии GoF? 
ВЕРНО: tructural 6100 / 6679
НЕ ВЕРНО: Reusable 349 / 6679
НЕ ВЕРНО: Core 335 / 6679
ВЕРНО: Creational 5822 / 6679
НЕ ВЕРНО: Organizational 898 / 6679
ВЕРНО: Behavioral 5933 / 6679
КОММЕНТАРИЙ: 
ВОПРОС: Когда следует использовать паттерн "приспособленец"? 
ВЕРНО: когда большинство состояний объектов могут быть сохранены на диске или рассчитаны во время исполнения 715 / 2169
ВЕРНО: когда нужно сократить затраты при работе с большим количеством мелких объектов. 1264 / 2169
ВЕРНО: когда объект может иметь несколько представлений 739 / 2169
ВЕРНО: когда нужно изменить реализацию без изменения абстракции 618 / 2169
КОММЕНТАРИЙ: 
ВОПРОС: Паттерн проектирования ... обеспечивает существование одного экземпляра некоторого класса и предоставляет единую точкудоступа к нему. 
ВЕРНО: Bridge 166 / 6925
ВЕРНО: Singleton 6368 / 6925
ВЕРНО: Adapter 140 / 6925
ВЕРНО: Proxy 157 / 6925
ВЕРНО: Decorator 74 / 6925
КОММЕНТАРИЙ: 
ВОПРОС: Какое назначение паттерна Factory Method? 
ВЕРНО: Определяет интерфейс для создания объекта, но оставляет подклассам решение о том, какой класс инстанцировать. Этот паттерн позволяет классу делегировать инстанцирование подклассам. 2172 / 3248
ВЕРНО: Отделяет конструирование сложного объекта от его представления, так что в результате одного и того же процесса конструирования могут получаться разные представления3. 58 / 3248
ВЕРНО: Предоставляет интерфейс для создания семейств взаимосвязанных или взаимозависимых объектов, не специфицируя их конкретных подклассов. 525 / 3248
ВЕРНО: Задает виды создаваемых объектов с помощью экземпляра-прототипа и создает новые объекты путем копирования этого прототипа. 172 / 3248
КОММЕНТАРИЙ: 
ВОПРОС: Какие из перечисленных паттернов проектирования относятся к порождающим? 
ВЕРНО: Prototype 3307 / 4272
ВЕРНО: Singleton 3253 / 4272
ВЕРНО: Command 201 / 4272
ВЕРНО: Strategy 277 / 4272
ВЕРНО: Factory 3814 / 4272
КОММЕНТАРИЙ: 
ВОПРОС: Какой паттерн проектирования используется для создания семейств зависимых между собой объектов? 
ВЕРНО: Dependency Injection 1043 / 7196
ВЕРНО: Builder 673 / 7196
ВЕРНО: Prototype 476 / 7196
ВЕРНО: Factory Method 688 / 7196
ВЕРНО: Abstract Factory 4279 / 7196
КОММЕНТАРИЙ: 
ВОПРОС: Какой из перечисленных паттернов применяется в ситуации, когда нужно произвести некоторые действия над всеми объектамиструктуры в зависимости от фактического типа каждого объекта? 
ВЕРНО: Iterator 926 / 4337
ВЕРНО: Visitor 1801 / 4337
ВЕРНО: Strategy 707 / 4337
ВЕРНО: Composite 619 / 4337
ВЕРНО: State 254 / 4337
КОММЕНТАРИЙ: 
ВОПРОС: Какой шаблон проектирования можно определить следующей фразой: " .. - поведенческий шаблон проектирования, обеспечивающий взаимодействие множества объектов, формируя при этом слабую связанность и избавляя объекты от необходимости явно ссылаться друг на друга "? 
ВЕРНО: Mediator 3595 / 7611
ВЕРНО: Low Coupling 1884 / 7611
ВЕРНО: High Cohesion 346 / 7611
ВЕРНО: Information Expert 244 / 7611
ВЕРНО: Observer 1431 / 7611
КОММЕНТАРИЙ: 
ВОПРОС: Сколько существует разных типов (и соответственно принципиально разных способов реализации) паттерна Adapter? 
ВЕРНО: 1 767 / 4317
ВЕРНО: 2 2687 / 4317
ВЕРНО: 3 634 / 4317
ВЕРНО: 4 184 / 4317
КОММЕНТАРИЙ: 
ВОПРОС: Какие из перечисленных утверждений верны по отношению к паттерну проектирования Composite: 
ВЕРНО: Composite паттерн содержит в себе несколько моделей поведения объекта и предоставляет возможность переключаться между ними. 755 / 4469
ВЕРНО: Паттерн Composite позволяет работать с композитными и простыми объектами одинаковым образом. 2919 / 4469
ВЕРНО: Паттерн Composite организовывает объекты в древовидные структуры. 2862 / 4469
ВЕРНО: Composite паттерн упрощает работу с группой объектов не связанных типов. 1317 / 4469
КОММЕНТАРИЙ: 
ВОПРОС: Целью какого паттерна является расширение функциональности класса или же ее изменение без использования механизма наследования? 
ВЕРНО: Proxy 325 / 4271
ВЕРНО: Composite 648 / 4271
ВЕРНО: Flyweight 232 / 4271
ВЕРНО: Decorator 3044 / 4271
КОММЕНТАРИЙ: 
ВОПРОС: Какие из этих паттернов являются паттернами создания объектов? 
ВЕРНО: Abstract Factory 4212 / 4529
ВЕРНО: Adapter 383 / 4529
ВЕРНО: Decorator 582 / 4529
ВЕРНО: Chain of Responsibility 417 / 4529
КОММЕНТАРИЙ: 
ВОПРОС: Верно ли высказывание: Различие между паттернами посредник (Mediator) и наблюдатель (Observer) в том, что наблюдатель распределяет обмен информацией между объектами, а посредник наоборот, инкапсулирует взаимодействие между другими объектами. 
ВЕРНО: да 3284 / 4270
ВЕРНО: нет 959 / 4270
КОММЕНТАРИЙ: 
ВОПРОС: При малом количестве объектов лучше использовать паттерн Facade вместо Mediator. 
ВЕРНО: Да 1612 / 4536
ВЕРНО: Нет 2891 / 4536
КОММЕНТАРИЙ: 
ВОПРОС: Назначением какого паттерна проектирования является предоставление удобного интерфейса к громоздкому и сложному API? 
ВЕРНО: Facade 3680 / 4542
ВЕРНО: Factory Method 217 / 4542
ВЕРНО: Iterator 100 / 4542
ВЕРНО: Decorator 349 / 4542
ВЕРНО: Strategy 171 / 4542
КОММЕНТАРИЙ: 
ВОПРОС: Паттерн Strategy имеет следующие преимущества: 
ВЕРНО: Гарантирует использование единственной стратегии во время выполнения программы. 1000 / 4530
ВЕРНО: Отделяет алгоритм от класса, в котором он используется. 3124 / 4530
ВЕРНО: Предоставляет разделение между моделью и представлением. 614 / 4530
ВЕРНО: Позволяет переключаться между алгоритмами во время выполнения программы. 3466 / 4530
КОММЕНТАРИЙ: 
ВОПРОС: Что из перечисленного верно о паттерне Memento: 
ВЕРНО: Это порождающий паттерн проектирования 399 / 4193
ВЕРНО: Его использование приводит к нарушению инкапсуляции 551 / 4193
ВЕРНО: Позволяет сохранить внутреннее состояние объекта 3390 / 4193
ВЕРНО: Позволяет динамически добавлять новый функционал к существующим объектам 542 / 4193
ВЕРНО: Это структурный паттерн проектирования 1080 / 4193
КОММЕНТАРИЙ: 
ВОПРОС: Какие из перечисленных паттернов проектирования относятся к поведенческим? 
ВЕРНО: Интерпретатор 2478 / 3234
ВЕРНО: Компоновщик 662 / 3234
ВЕРНО: Хранитель 2094 / 3234
ВЕРНО: Строитель 301 / 3234
ВЕРНО: Посредник 2309 / 3234
ВЕРНО: Адаптер
КОММЕНТАРИЙ: 
ВОПРОС: 1
ВЕРНО: 1
КОММЕНТАРИЙ: 
